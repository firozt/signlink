import { Button, Center, Input, InputField, InputIcon, InputSlot, ScrollView, SearchIcon, View, createStyle } from '@gluestack-ui/themed'
import React, { useState } from 'react'
import { IOS_GOOGLE_LOGIN_ID, WEB_GOOGLE_ID, REACT_APP_SERVER_PROXY_URL } from '@env';

import { GoogleSignin, User, statusCodes } from '@react-native-google-signin/google-signin';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { Image, NativeSyntheticEvent, StyleSheet, Text, TextInputChangeEventData } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import axios from 'axios';
import Register from '../Components/Register';
import Login from '../Components/Login';


// This page will only appear for users who are not signed in, they do not have any 
// user account details saved into their async storage

type Props = {
  setUser: (newUser: User) => void
}

GoogleSignin.configure({
  webClientId: WEB_GOOGLE_ID,
  iosClientId: IOS_GOOGLE_LOGIN_ID,
});

const NewUser = ({setUser}: Props) => {
  const navigation = useNavigation()
  const [loginOrRegister, setLoginOrRegister] = useState<'login' | 'register' | null>('register');
  // attempts to login with google
  const signIn = async () => {
    try {
      await GoogleSignin.hasPlayServices();
      const userInfo: User = await GoogleSignin.signIn();
      successfullSignin(userInfo)
    } catch (error: any) {
      if (error.code === statusCodes.SIGN_IN_CANCELLED) {
        // user cancelled the login flow
      } else if (error.code === statusCodes.IN_PROGRESS) {
        // operation (e.g. sign in) is in progress already
      } else if (error.code === statusCodes.PLAY_SERVICES_NOT_AVAILABLE) {
        // play services not available or outdated
      } else {
        // some other error happened
      }
    }
  };

  // make call to save user info (does checking on backend)
  // this is for google login only
  const saveUser = (userInfo: User) => {
    const url =` ${REACT_APP_SERVER_PROXY_URL}${"/users/save"}`
    console.log(url)
    axios.post(url,{
      googleID: userInfo.user.id,
      name: userInfo.user.name,
      email: userInfo.user.email,
      id: "" // generated by server
    })
    .then(response => {
      console.log(response.data)
      userInfo.user.id = response.data
      AsyncStorage.setItem('@user',JSON.stringify(userInfo)); // save user to local
      setUser(userInfo)
       // @ts-ignore, issue with react-native-navigation
      navigation.navigate('Home', {user: userInfo}) 
    })
    .catch(error => {
      console.error("Error saving user " + error)
    })
    return ''
  }


  const successfullSignin = async (userInfo: User) => {
    try {
      saveUser(userInfo) // save user to db
      
    } catch (error: unknown) {
      console.error(error)
    }
  }

  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <Image style={{width:150,height:150, margin: -20}} source={require('../../public/SL-logo-transparent.png')} />
        <Text style={styles.title}>SignLink</Text>
      </View>
      <Center>
        {
          loginOrRegister == 'login' && <Login setUser={setUser}/>
        }
        {
          loginOrRegister == 'register' && <Register setUser={setUser}/>
        }
        {
          (loginOrRegister == 'register' || loginOrRegister == null) && 
          <>
            <Button style={styles.button} onPress={() => setLoginOrRegister('login')}>
              <Text style={{color:'white'}}>Login</Text>
            </Button>
          </>
        }
        {
          (loginOrRegister == 'login' || loginOrRegister == null) && 
          <>
            <Button style={styles.button} onPress={() => setLoginOrRegister('register')}>
              <Text style={{color:'white'}}>Register</Text>
            </Button>
          </>
        }
        <Button style={styles.button}>
          <Image  style={styles.image} source={require('../../public/googlelogo.png')} />
          <Text onPress={() => signIn()} style={styles.googleButtonText}>
            Login with Google
          </Text>
        </Button>
      </Center>
    </View>
  )
}

const styles = StyleSheet.create({
  container: {
    backgroundColor: '#4F46BD',
    height: '100%',
    width: '100%',
  },
  button: {
    width:200,
    margin: 2.5
  },
  title: {
    fontSize:64,
    color: 'white',
    textAlign: 'center',
    marginTop: 64,
    bottom: 30,
    marginLeft: 10

  },
  image: {
    width:25,
    height:25,
    right:10
  },
  googleButtonText: {
    color: 'white',
  },
  header: {
    display: 'flex',
    flexDirection: 'row',
    justifyContent:'center',
    alignItems: 'center',
    
  }

})

export default NewUser